// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TestMsg struct {
	Method               int32    `protobuf:"varint,1,opt,name=method,proto3" json:"method,omitempty"`
	Value                int32    `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestMsg) Reset()         { *m = TestMsg{} }
func (m *TestMsg) String() string { return proto.CompactTextString(m) }
func (*TestMsg) ProtoMessage()    {}
func (*TestMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *TestMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestMsg.Unmarshal(m, b)
}
func (m *TestMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestMsg.Marshal(b, m, deterministic)
}
func (m *TestMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestMsg.Merge(m, src)
}
func (m *TestMsg) XXX_Size() int {
	return xxx_messageInfo_TestMsg.Size(m)
}
func (m *TestMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_TestMsg.DiscardUnknown(m)
}

var xxx_messageInfo_TestMsg proto.InternalMessageInfo

func (m *TestMsg) GetMethod() int32 {
	if m != nil {
		return m.Method
	}
	return 0
}

func (m *TestMsg) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type ReturnMsg struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReturnMsg) Reset()         { *m = ReturnMsg{} }
func (m *ReturnMsg) String() string { return proto.CompactTextString(m) }
func (*ReturnMsg) ProtoMessage()    {}
func (*ReturnMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *ReturnMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReturnMsg.Unmarshal(m, b)
}
func (m *ReturnMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReturnMsg.Marshal(b, m, deterministic)
}
func (m *ReturnMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReturnMsg.Merge(m, src)
}
func (m *ReturnMsg) XXX_Size() int {
	return xxx_messageInfo_ReturnMsg.Size(m)
}
func (m *ReturnMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_ReturnMsg.DiscardUnknown(m)
}

var xxx_messageInfo_ReturnMsg proto.InternalMessageInfo

func (m *ReturnMsg) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*TestMsg)(nil), "api.TestMsg")
	proto.RegisterType((*ReturnMsg)(nil), "api.ReturnMsg")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 146 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0x2c, 0xc8, 0xd4,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0x2c, 0xc8, 0x54, 0x32, 0xe7, 0x62, 0x0f, 0x49,
	0x2d, 0x2e, 0xf1, 0x2d, 0x4e, 0x17, 0x12, 0xe3, 0x62, 0xcb, 0x4d, 0x2d, 0xc9, 0xc8, 0x4f, 0x91,
	0x60, 0x54, 0x60, 0xd4, 0x60, 0x0d, 0x82, 0xf2, 0x84, 0x44, 0xb8, 0x58, 0xcb, 0x12, 0x73, 0x4a,
	0x53, 0x25, 0x98, 0xc0, 0xc2, 0x10, 0x8e, 0x92, 0x2c, 0x17, 0x67, 0x50, 0x6a, 0x49, 0x69, 0x51,
	0x1e, 0x48, 0xab, 0x00, 0x17, 0x73, 0x6e, 0x71, 0x3a, 0x58, 0x1f, 0x67, 0x10, 0x88, 0x69, 0xa4,
	0xcf, 0xc5, 0xee, 0x5a, 0x91, 0x98, 0x5b, 0x90, 0x93, 0x2a, 0xa4, 0xc2, 0xc5, 0xe2, 0x5a, 0x91,
	0x9a, 0x2c, 0xc4, 0xa3, 0x07, 0xb2, 0x1b, 0x6a, 0x9b, 0x14, 0x1f, 0x98, 0x07, 0x37, 0x22, 0x89,
	0x0d, 0xec, 0x28, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x12, 0x8e, 0x19, 0xd6, 0xa1, 0x00,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ExampleClient is the client API for Example service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExampleClient interface {
	Exec(ctx context.Context, in *TestMsg, opts ...grpc.CallOption) (*ReturnMsg, error)
}

type exampleClient struct {
	cc *grpc.ClientConn
}

func NewExampleClient(cc *grpc.ClientConn) ExampleClient {
	return &exampleClient{cc}
}

func (c *exampleClient) Exec(ctx context.Context, in *TestMsg, opts ...grpc.CallOption) (*ReturnMsg, error) {
	out := new(ReturnMsg)
	err := c.cc.Invoke(ctx, "/api.Example/Exec", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ExampleServer is the server API for Example service.
type ExampleServer interface {
	Exec(context.Context, *TestMsg) (*ReturnMsg, error)
}

func RegisterExampleServer(s *grpc.Server, srv ExampleServer) {
	s.RegisterService(&_Example_serviceDesc, srv)
}

func _Example_Exec_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TestMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExampleServer).Exec(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Example/Exec",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExampleServer).Exec(ctx, req.(*TestMsg))
	}
	return interceptor(ctx, in, info, handler)
}

var _Example_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Example",
	HandlerType: (*ExampleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Exec",
			Handler:    _Example_Exec_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}
